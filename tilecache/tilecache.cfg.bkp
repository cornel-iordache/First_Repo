# Configuration for MC TileCache

# TileCache can load Layers or Caches from anywhere in sys.path. If you 
# prefer to load from somewhere which is *not* on sys.path, you can use
# the path configuration paramter to set a comma-seperated list of 
# filesystem paths which you want prepended to sys.path.
#[tilecache_options]
#path=/home/you

# Some TileCache options are controlled by metadata. One example is the
# crossdomain_sites option, which allows you to add sites which are then
# included in a crossdomain.xml file served from the root of the TileCache
#[metadata]
#crossdomain_sites=openstreetmap.org,openaerialmap.org

# [cache] section examples: (mandatory!)
# 
# Disk:
# [cache] 
# type=Disk   (works out of the box)
# base=<full path to cache directory>
# 
# Memcached:
# [cache]
# type=Memcached  (you'll need memcache.py and memcached running!)
# servers=192.168.1.1:11211
#
# Amazon S3:
# [cache]
# type=AWSS3
# access_key=your_access_key
# secret_access_key=your_secret_access_key

[cache]
type=Disk
base=/mnt/osm/tiles

# [layername] -- all other sections are named layers
#
# type={MapServerLayer,WMSLayer} 
#   *** if you want to use MapServerLayer, you *must* have Python mapscript
#       installed and available ***
# 
# mapfile=<full path to map file>   
# url=<full URL of WMS>             
# layers=<layer>[,<layer2>,<layer3>,...] 
#                                   *** optional iff layername if what
#                                       your data source calls the layer **
# extension={png,jpeg,gif}          *** defaults to "png"               ***
# size=256,256                      *** defaults to 256x256             ***
# bbox=-180.0,-90.0,180.0,90.0      *** defaults to world in lon/lat    ***
# srs=EPSG:4326                     *** defaults to EPSG:4326           ***
# levels=20                         *** defaults to 20 zoom levels      ***
# resolutions=0.1,0.05,0.025,...    *** defaults to global profile      ***
# metaTile=true                     *** metatiling off by default
#                                       requires python-imaging         ***
# metaSize=5,5                      *** size of metatile in tiles
#                                       defaults to 5 x 5               ***
# metaBuffer=10                     *** size of metatile buffer in px   ***
# mime_type=image/png  *** by default, the mime type is image/extension ***   
#                      *** but you may want to set extension=png8 for   ***
#                      *** GeoServer WMS, and this lets you set the     ***
#                      *** mime_type seperately.                        ***

# The following is a demonstration of a layer which would be generated
# according to the 'Google projection'. This uses the standard values for
# a spherical mercator projection for maxextent, maxresolution, units 
# and srs.
# [google-tiles]
# type=WMS
# url=http://localhost/cgi-bin/mapserv?map=/mapdata/world.map
# layers=world
# spherical_mercator=true

# Standard MapServer layer configuration.
# [vmap0]
# type=MapServer
# layers=vmap0
# mapfile=/var/www/vmap0.map

# Rendering OpenStreetMap data with Mapnik; should use metaTiling to
# avoid labels across tile boundaries 
[osm]
extension=png256
mapfile=/mnt/osm/osm-config/mapnik/osm.xml
metabuffer=125
metatile=yes
tms_type=google
type=Mapnik

#[basic]
#type=WMS
#url=http://labs.metacarta.com/wms/vmap0
#extension=png

[bluemarble]
type=WMS
layers=bluemarble
url=http://maps.opengeo.org/geowebcache/service/wms?SERVICE=WMS&
extension=png

[bcrindex]
type=Mapnik
mapfile=/mnt/osm/maps/mapnik-bcrindex.xml
tms_type=google
metatile=yes
layers=bcrindex
extension=png256

[carbon]
type=MapServer
mapfile=/mnt/osm/maps/mapnik-final_full-30arcsec.map
tms_type=google
metatile=yes
layers=final_full-30arcsec
extension=png256

#[carbon2009sa]
#type=Mapnik
#mapfile=/home/osm/mapnik-carbon-2009-sa.xml
#tms_type=google
#metatile=yes
#layers=carbon-2009-sa
#extension=png256

[carbon09]
#type=Mapnik
#mapfile=/home/osm/mapnik-carbon-2009.xml
#tms_type=google
#metatile=yes
type=MapServer
mapfile=/mnt/osm/maps/ecometrica.map
metatile=yes
layers=carbon09
extension=png256

[carbonchange]
#type=Mapnik
#mapfile=/home/osm/mapnik-carbon-change.xml
#tms_type=google
#metatile=yes
type=MapServer
mapfile=/mnt/osm/maps/ecometrica.map
metatile=yes
layers=change
extension=png256

[add2010]
type=MapServer
mapfile=/mnt/osm/maps/add.map
metatile=yes
layers=add2010
extension=png256

[globalRiskmap]
type=MapServer
mapfile=/mnt/osm/maps/ecometrica.map
metatile=yes
layers=globalRiskmap
extension=png256

[sc9293]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_sc.map
extension=png256
metatile=yes
layers=sc199293

[sc9900]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_sc.map
extension=png256
metatile=yes
layers=sc199900

[sc0809]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_sc.map
extension=png256
metatile=yes
layers=sc200809

[wl1989]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_wl.map
extension=png256
metatile=yes
layers=woodland1989

[wl1995]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_wl.map
extension=png256
metatile=yes
layers=woodland1995

[wl2000]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_wl.map
extension=png256
metatile=yes
layers=woodland2000

[wl2005]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_wl.map
extension=png256
metatile=yes
layers=woodland2005

[wl2009]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_wl.map
extension=png256
metatile=yes
layers=woodland2009

[w1989]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_water.map
extension=png256
metatile=yes
layers=water1989

[w1995]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_water.map
extension=png256
metatile=yes
layers=water1995

[w2000]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_water.map
extension=png256
metatile=yes
layers=water2000

[w2005]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_water.map
extension=png256
metatile=yes
layers=water2005

[w2009]
type=MapServer
mapfile=/mnt/osm/maps/bpbio_water.map
extension=png256
metatile=yes
layers=water2009

[bpbio_base]
mapfile=/mnt/osm/maps/bpbio.map
extension=png256
metatile=yes
type=MapServer
layers=bpbio_base
